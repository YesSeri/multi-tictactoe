[{"/home/henrikz/projects/langs/react/ts/multi-tictactoe/multi-tictactoe-client/src/components/Board.tsx":"1","/home/henrikz/projects/langs/react/ts/multi-tictactoe/multi-tictactoe-client/src/components/Game.tsx":"2","/home/henrikz/projects/langs/react/ts/multi-tictactoe/multi-tictactoe-client/src/App.tsx":"3","/home/henrikz/projects/langs/react/ts/multi-tictactoe/multi-tictactoe-client/src/components/Board.styles.ts":"4","/home/henrikz/projects/langs/react/ts/multi-tictactoe/multi-tictactoe-client/src/components/utils.ts":"5"},{"size":830,"mtime":1609718812903,"results":"6","hashOfConfig":"7"},{"size":1399,"mtime":1609722172623,"results":"8","hashOfConfig":"7"},{"size":495,"mtime":1609720025035,"results":"9","hashOfConfig":"7"},{"size":538,"mtime":1609711718758,"results":"10","hashOfConfig":"7"},{"size":533,"mtime":1609720612163,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"1xsk4n7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/henrikz/projects/langs/react/ts/multi-tictactoe/multi-tictactoe-client/src/components/Board.tsx",["23","24"],"import React, { useState, useEffect } from 'react';\nimport { Wrapper } from './Board.styles';\n\nexport type SquareValue = 'X' | 'O' | null;\n\ntype SquareProps = {\n\tvalue: SquareValue;\n\tonClick: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n};\n\nconst Square = ({ value, onClick }: SquareProps) => {\n\treturn (\n\t\t<div onClick={(e) => onClick(e)} className=\"square\">\n\t\t\t{value}\n\t\t</div>\n\t);\n};\n\ntype BoardsProps = {\n\tsquares: Array<SquareValue>;\n\thandleClick: (i: number) => void;\n}\n\nconst Board: React.FC<BoardsProps> = ({ squares, handleClick }: BoardsProps) => {\n\n\tconst renderSquare = (i: number) => {\n\t\treturn <Square onClick={() => handleClick(i)} value={squares[i]} key={i} />;\n\t};\n\n\treturn (\n\t\t<Wrapper className=\"wrapper\">\n\t\t\t{squares.map((_, i) => renderSquare(i))}\n\t\t</Wrapper>\n\t);\n};\n\nexport default Board;\n","/home/henrikz/projects/langs/react/ts/multi-tictactoe/multi-tictactoe-client/src/components/Game.tsx",[],"/home/henrikz/projects/langs/react/ts/multi-tictactoe/multi-tictactoe-client/src/App.tsx",["25"],"/home/henrikz/projects/langs/react/ts/multi-tictactoe/multi-tictactoe-client/src/components/Board.styles.ts",[],"/home/henrikz/projects/langs/react/ts/multi-tictactoe/multi-tictactoe-client/src/components/utils.ts",[],{"ruleId":"26","severity":1,"message":"27","line":1,"column":17,"nodeType":"28","messageId":"29","endLine":1,"endColumn":25},{"ruleId":"26","severity":1,"message":"30","line":1,"column":27,"nodeType":"28","messageId":"29","endLine":1,"endColumn":36},{"ruleId":"26","severity":1,"message":"31","line":4,"column":7,"nodeType":"28","messageId":"29","endLine":4,"endColumn":19},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'uniqueString' is assigned a value but never used."]